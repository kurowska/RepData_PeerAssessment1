rm(cnames,github_token,gtoken,howmany,json2,k,my_data,my_matrix,my_matrix2,my_vector,myapp,mydata)
rm(myfile,mytest,patients,req,temps,url,url1,widths,x,y,z,y1,x1)
library(readr)
library(dplyr)
library(tidyr)
library(pryr)
daily <- read_csv("data/daily_SPEC_2014.csv.bz2")
dnames <- names(daily)
dnames <- gsub("\\s",".",dnames)
names(daily) <- dnames
names(daily)
daily <- mutate(daily,State.Code=as.numeric(State.Code),County.Code=as.numeric(County.Code),Site.Num=as.numeric(Site.Num))
sites <- read_excel("data/aqs_sites.xlsx")
names(sites) <-  gsub("\\s", ".", names(sites))
sites <- select(sites, State.Code, County.Code, Site.Number, Land.Use, Location.Setting)
sites <- rename(sites,Site.Num=Site.Number)
library(readxl)
sites <- read_excel("data/aqs_sites.xlsx")
names(sites) <-  gsub("\\s", ".", names(sites))
sites <- select(sites, State.Code, County.Code, Site.Number, Land.Use, Location.Setting)
sites <- rename(sites,Site.Num=Site.Number)
head(sites)
head(daily)
sites <- read_excel("data/aqs_sites.xlsx")
names(sites) <-  gsub("\\s", ".", names(sites))
head(sites)
sites <- select(sites, State.Code, County.Code, Site.Number, Land.Use, Location.Setting, Longitude)
head(sites)
sites <- rename(sites,Site.Num=Site.Number)
daily <- select(daily,State.Code, County.Code, Site.Num, Parameter.Name,Arithmetic.Mean)
dailysite <- left_join(spec, sites, by = c("State.Code", "County.Code", "Site.Num"))
dailysite <- left_join(daily, sites, by = c("State.Code", "County.Code", "Site.Num"))
head(dailysite)
str(dailysite)
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Land.Use=="RESIDENTAL")
head(test)
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR")
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN")
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN" & Longitude >= -100)
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN" & Longitude >= -100 & Land.Use=="RESIDENTAL")
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN" & Land.Use=="RESIDENTAL")
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN" & Longitude >= -100)
test
test <- filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Location.Setting=="SUBURBAN" & Land.Use=="RESIDENTIAL")
test
filter(dailysites,Parameter.Name=="EC PM2.5 LC TOR" & Land.Use="RESIDENTIAL" & Location.Setting="SUBURBAN" & Longitude >= -100) %>% group_by(Parameter.Name) %>% summarize(median=median(Arithmetic.Mean))
filter(dailysites,Parameter.Name=="EC PM2.5 LC TOR" & Land.Use=="RESIDENTIAL" & Location.Setting=="SUBURBAN" & Longitude >= -100) %>% group_by(Parameter.Name) %>% summarize(median=median(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="EC PM2.5 LC TOR" & Land.Use=="RESIDENTIAL" & Location.Setting=="SUBURBAN" & Longitude >= -100) %>% group_by(Parameter.Name) %>% summarize(median=median(Arithmetic.Mean))
daily <- read_csv("data/daily_SPEC_2014.csv.bz2")
dnames <- names(daily)
dnames <- gsub("\\s",".",dnames)
names(daily) <- dnames
names(daily)
daily <- mutate(daily,State.Code=as.numeric(State.Code),County.Code=as.numeric(County.Code),Site.Num=as.numeric(Site.Num))
sites <- read_excel("data/aqs_sites.xlsx")
names(sites) <-  gsub("\\s", ".", names(sites))
names(daily)
names(sites)
test <- select(sites,Extraction.Date)
head(test)
named(daily)
names(daily)
test <- select(daily,Date.of.Last.Change)
head(test)
sites <- select(sites, State.Code, County.Code, Site.Number, Land.Use, Location.Setting, Longitude, Extraction.Date)
sites <- rename(sites,Site.Num=Site.Number)
daily <- select(daily,State.Code, County.Code, Site.Num, Parameter.Name,Arithmetic.Mean,Date.of.Last.Change)
dailysite <- left_join(daily, sites, by = c("State.Code", "County.Code", "Site.Num"))
library(lubridate)
head(dailysite)
test <-select(dailysite,Date.of.Last.Change,Extraction>date)
test <-select(dailysite,Date.of.Last.Change,Extraction.Date)
head(test)
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(Extraction.Date)) %>% summarize(avg=mean(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(Extraction.Date)) %>% summarize(avg=mean(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(Extraction.Date) %>% summarize(avg=mean(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(Date.of.Last.Change) %>% summarize(avg=mean(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(as.POSIXlt(Date.of.Last.Change,format="%Y-%m-%d")) %>% summarize(avg=mean(Arithmetic.Mean))
)
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(Date.of.Last.Change)) %>% summarize(avg=mean(Arithmetic.Mean))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(Date.of.Last.Change)) %>% summarize(avg=mean(Arithmetic.Mean)) %>% arrange(desc(avg))
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(Extraction.Date)) %>% summarize(avg=mean(Arithmetic.Mean)) %>% arrange(desc(avg))
daily <- read_csv("data/daily_SPEC_2014.csv.bz2")
dnames <- names(daily)
dnames <- gsub("\\s",".",dnames)
names(daily) <- dnames
names(daily)
daily <- mutate(daily,State.Code=as.numeric(State.Code),County.Code=as.numeric(County.Code),Site.Num=as.numeric(Site.Num))
sites <- read_excel("data/aqs_sites.xlsx")
names(sites) <-  gsub("\\s", ".", names(sites))
names(sites)
daily <- select(daily,State.Code, County.Code, Site.Num, Parameter.Name,Arithmetic.Mean,Date.Local)
sites <- select(sites, State.Code, County.Code, Site.Number, Land.Use, Location.Setting, Longitude, Datum)
dailysite <- left_join(daily, sites, by = c("State.Code", "County.Code", "Site.Num"))
sites <- rename(sites,Site.Num=Site.Number)
dailysite <- left_join(daily, sites, by = c("State.Code", "County.Code", "Site.Num"))
test <- select(dailysite,Datum,Date.Local)
head(test)
filter(dailysite,Parameter.Name=="Sulfate PM2.5 LC" & Land.Use=="COMMERCIAL") %>% group_by(month(Date.Local)) %>% summarize(avg=mean(Arithmetic.Mean)) %>% arrange(desc(avg))
cali <- filter(dailysite,State.Code==6,County.Code==65,Site.Num==8001)
head(cali)
cali <- filter(dailysite,State.Code==6 &County.Code==65&Site.Num==8001)
head(cali)
cali <- spread(Parameter.Name,Arithmetic.Mean)
cali <- spread(cali,Parameter.Name,Arithmetic.Mean)
head(cali)
cali <- filter(cali,Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC"))
head(cali)
cali <- spread(cali,Parameter.Name,Arithmetic.Mean)
?spread
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
names(cali)
cali <- select(cali,Parameter.Name,Arithmetic.Mean,Date.Local)
head(cali)
cali<- spread(cali,Parameter.Name,Arithmetic.Mean)
?dcast
library(reshape2)
?dcast
test <- dcast(cali,Parameter.Name ~ Arithmetic.Mean)
head(test)
test <- dcast(cali,Parameter.Name ~ Date.Local)
head(test)
?aggregate
head(cali)
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
cali$row <- 1:nrow(cali)
head(cali)
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
head(test)
names(test) <-gsub("\\s",".",names(test))
head(test)
test <- mutate(test,Sum=Sulfate.PM2.5.LC+Sulfate.PM2.5.LC)
head(test)
test <- filter(test,Sum > 10, na.rm=TRUE)
test <- filter(test,Sum > 10)
head(test)
head(test)tail(cali)
tail(cali)
test <- cali[!is.na]
test <- cali[,!is.na]
test <- cali[,!is.na(cali)]
test <- cali[!is.na(cali)]
test <- cali[,!is.na(Arithmetic.Mean)]
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
head(test)
names(test) <- c("Date","row","Sulfate","Nitrate")
head(test)
tail(cali)
cali <- select(cali,Parameter.Name,Arithmetic.Mean,Date.Local)
head(cali)
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
cali$row <- 1:nrow(cali)
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
head(test)
test <- group_by(test,Date.Local)
head(test)
summarize(test,Date.Local)
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
summarize(test,Date.Local)
summarize(test,date=Date.Local)
head(cali)
group_by(cali,Date.Local) %>% summarize(Parameter.Name)
head(cali)
long <- gather(cali,Parameter.Name,Arithmetic.Mean,-Date.Local,-row)
wide <- spread(long,Parameter.Name,Arithmetic.Mean)
head(wide)
wide <- spread(cali,Parameter.Name,Arithmetic.Mean,-Date.Local,-row)
?spread
test <- spread(cali,Parameter.Name,Arithmetic.Mean)
head(test)
test <-select(test,-row)
head(test)
test <- group_by(test,Date.Local)
head(test)
ungroup(test)
names(test) <- c("Date","Sulfate","Nitrate")
head(test)
head(cali)
cali <- select(cali,Parameter.Name,Arithmetic.Mean,Date.Local)
head(cali)
cali1 <- filter(cali,Parameter.Name=="Total Nitrate PM2.5 LC")
cali2 <- filter(cali,Parameter.Name=="Sulfate PM2.5 LC")
head(cali1)
cali1 <- spread(cali1,Parameter.Name,Arithmetic.Mean)
cali1 <- mutate(cali1,Nitrate=Arithmetic.Mean)
head(cali1)
cali1 <- select(cali1,Date.Local,Nitrate)
head(cali1)
cali2 <- mutate(cali2,Sulfate=Arithmetic.Mean)
head(cali2)
cali2 <- select(cali2,Date.Local,Sulfate)
dim(cali1)
cal <- merge(cali1,cali2,by="Date.Local")
head(cal)
cal <- mutate(cal,Sum=Nitrate+Sulfate)
head(cal)
cal <- filter(cal,Sum>10)
head(cal)
group_by(cal,Date.Local) %>% summarize(singles=mean(Sum))
group_by(cal,Date.Local) %>% summarize(singles=mean(Sum)) %>% nrow()
head(dailysite)
head(cali)
head(cali,20)
tail(cali,20)
group_by(cal,Date.Local,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
group_by(cali,Date.Local,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
cal <- group_by(cali,Date.Local,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
head(cal)
spread(cal,Parameter.Name,avg)
test <- spread(cal,Parameter.Name,avg)
names(test) <- c("Date.Local","Sulfate","Nitrate")
head(test)
test <- mutate(test,Sum=Sulfate+Nitrate)
head(test)
filter(test,Sum>10)
group_by(dailysite,Date.Local,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
group_by(dailysite,Date.Local,Parameter.Name,State.Code,County.Code,Site.Num) %>% summarize(avg=mean(Arithmetic.Mean)) %>%
)
group_by(dailysite,Date.Local,Parameter.Name,State.Code,County.Code,Site.Num) %>% summarize(avg=mean(Arithmetic.Mean))
group_by(dailysite,Date.Local,Parameter.Name,State.Code,County.Code,Site.Num) %>% summarize(avg=mean(Arithmetic.Mean)) %>% filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC" ))
ten <- group_by(dailysite,Date.Local,Parameter.Name,State.Code,County.Code,Site.Num) %>% summarize(avg=mean(Arithmetic.Mean)) %>% filter(Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC" ))
head(ten)
spread(ten,Parameter.Name,avg)
ten <- filter(dailysite,Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC" )) %>% group_by(Date.Local,State.Code,County.Code,Site.Num,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
head(ten)
spread(ten,Parameter.Name,avg)
tena <- spread(ten,Parameter.Name,avg)
ten <- filter(dailysite,Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC" )) %>% group_by(Date.Local,State.Code,County.Code,Site.Num) %>% summarize(avg=mean(Arithmetic.Mean))
head(ten)
ten <- filter(dailysite,Parameter.Name %in% c("Sulfate PM2.5 LC","Total Nitrate PM2.5 LC" )) %>% group_by(State.Code,County.Code,Site.Num,Date.Local,Parameter.Name) %>% summarize(avg=mean(Arithmetic.Mean))
head(ten)
tena <- spread(ten,Parameter.Name,avg)
head(tena)
names(tena) <- c("State.Code","County.Code","Site.Num","Date.Local","Sulfate","Nitrate")
head(tena)
dim(tena)
tenb <- mutate(tenb,corelatio=cor(Sulfate,Nitrate))
tenb <- mutate(tena,corelatio=cor(Sulfate,Nitrate))
head(tenb)
?cor
tenb <- mutate(tena,corelatio=cor(Nitrate,Sulfate,  method = "pearson", use = "complete.obs")
)
head(tena)
tenb <- mutate(tena,corelation=cor(Nitrate,Sulfate,  method = "pearson")
)
head(tenb)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
tenb <- mutate(tena,corelation=cor(Nitrate,Sulfate,  method = "pearson"))
head(tenb)
group_by(tena,State.Code,State.County,Site.Num,Date.Local) %>% summarize(correlation=cor(Sulfate,Nitrate,method="pearson"))
group_by(tena,State.Code,County.Code,Site.Num,Date.Local) %>% summarize(correlation=cor(Sulfate,Nitrate,method="pearson"))
group_by(tena,State.Code,County.Code,Site.Num,Date.Local) %>% summarize(correlation=cor(Sulfate,Nitrate,method="pearson")$estimate)
group_by(tena,State.Code,County.Code,Site.Num) %>% summarize(correlation=cor(Sulfate,Nitrate,method="pearson"))
group_by(tena,State.Code,County.Code,Site.Num) %>% summarize(correlation=cor(Sulfate,Nitrate,method="pearson")) %>%arrange(desc(correlation))
library(data.table)
library(dtplyr)
install.packages("dtplyr")
library(dtplyr)
brazil_zika <- fread("data/COES_Microcephaly-2016-06-25.csv")
library(swirl)
swirl()
install_course("Advanced R Programming")
swirl()
?runif
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4,div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[0]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[len(x)]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("Julia is on a roll")
submit()
mad_libs("Berkeley","goofy","president")
submit()
submit()
submit()
submit()
submit()
'I' %p% 'love' %p% 'R!'
?seq
ls()
rm(%p%,boring_function,cal,cali,cali1,cali2,daily,dailysite,dnames,evaluate,long,mad_libs,my_mean,remainer,sites,telegram,ten,tena,tenb,test,wide)
ls()
rm(boring_function,cal,cali,cali1,cali2,daily,dailysite,dnames,evaluate,long,mad_libs,my_mean,remainer,sites,telegram,ten,tena,tenb,test,wide)
rm(boring_function,cal,cali,cali1,cali2,daily,dailysite,dnames,evaluate,long,mad_libs,my_mean,remainder,sites,telegram,ten,tena,tenb,test,wide)
ls()
rm("%p%")
ls()
install.packages("purrr")
install.packages("microbenchmark")
library(purrr)
library(microbenchmark)
library(tidyr)
library(magrittr)
library(dplyr)
source(fibonaci.R)
source("fibonaci.R")
getwd()
setwd("../")
getwd()
source("fibonaci.R")
source("fibonaci.R")
source("fibonaci.R")
source("fibonaci.R")
source("fibonaci.R")
setwd("ReproducibleResearch")
getwd()
dir()
dir("data")
proj <- read_csv(dest)
ls()
proj <- read_csv(dest)
library(readr)
library(dplyr)
src <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
dest <- file.path("data",basename(src))
if (!file.exists(dest))
download.file(src,dest,method="curl",quiet=TRUE)
proj <- read_csv(dest)
ls()
dim(proj)
head(proj)
proj %>% group_by(date) %>% summarize(step_sum = sum(steps,na.rm=TRUE))
sum_of_steps <- proj %>% group_by(date) %>% summarize(step_sum = sum(steps,na.rm=TRUE))
with(sum_of_steps, histogram(date, weight=step_sum))
with(sum_of_steps, plot(date, step_sum))
?plot
with(sum_of_steps, plot(date, step_sum, type="h"))
?plot
with(sum_of_steps, plot(date, step_sum, type="s"))
?plot
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue"))
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"))
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=mean(step_sum), col="red"))
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=mean(step_sum))
)
dev.off()
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=mean(step_sum))
)
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=mean(step_sum),lwd=2,col="red"))
step_mean <- colMeans(sum_of_steps$step_sum)
step_mean <- colMeans(sum_of_steps[,step_sum])
?colmeans
?colMeans
step_mean <- colMeans(sum_of_steps)
step_mean <- colMeans(sum_of_steps[,2])
step_mean
step_median <- median(sum_of_steps[,2])
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"))
abline(h=step_mean,lwd=2)
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=colMean(sum_of_steps[,2]),lwd=2,col="red"))
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"))
abline(h=colMean(sum_of_steps[,2]),lwd=2,col="red")
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=colMeans(sum_of_steps[,2]),lwd=2,col="red"))
abline(h=colMeans(sum_of_steps[,2]),lwd=2,col="red")
abline(h=median(sum_of_steps[,2]),lwd=2,col="green")
abline(h=median(sum_of_steps$step_sum),lwd=2,col="green")
abline(h=mean(sum_of_steps$step_sum),lwd=2,col="blue")
abline(h=mean(sum_of_steps$step_sum),lwd=2,col="red")
legend("topleft",lwd=2,col=c("green","red"),c("Median","Mean"), cex=1.2,box.lwd=0)
library(ggplot2)
qplot(step_sum,data=sum_of_steps,fill="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(h=mean(sum_of_steps$step_sum),lwd=2,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_smooth(h=mean(sum_of_steps$step_sum),lwd=2,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(h=mean(sum_of_steps$step_sum),lwd=2,col="blue")
?geom_smooth
?geom_line
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(position=mean(sum_of_steps$step_sum),lwd=2,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(position=aes(mean(sum_of_steps$step_sum)),lwd=2,col="blue")
?geom_line
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(mean(sum_of_steps$step_sum)),lwd=2,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(date, weight=mean(sum_of_steps$step_sum)),lwd=2,col="blue")
?geom_line
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=2,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
qplot(date,data=sum_of_steps,weight=step_sum,col="blue") + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue") + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
qplot(date,data=sum_of_steps,weight=step_sum,fill="blue",show_guide=FALSE) + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
?qplot
?geom
with(sum_of_steps, plot(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=colMeans(sum_of_steps[,2]),lwd=2,col="red"))
with(sum_of_steps, hist(date, step_sum, type="s", lwd=2, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=colMeans(sum_of_steps[,2]),lwd=2,col="red"))
p1 <- c(sum_of_steps$date,sum_of_steps$step_sum)
hist(p1, col="blue", xlab="Date",ylab="Total numer of steps taken each day"), abline(h=colMeans(sum_of_steps[,2]),lwd=2,col="red")
hist(p1, col="blue", xlab="Date",ylab="Total numer of steps taken each day")
hist(p1, breaks = nrows(sum_of_steps),col="blue", xlab="Date",ylab="Total numer of steps taken each day")
hist(p1, breaks = nrow(sum_of_steps),col="blue", xlab="Date",ylab="Total numer of steps taken each day")
qplot(date,data=sum_of_steps,weight=step_sum,geom="histogram",fill="blue",show_guide=FALSE) + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
nrow(sum_of_steps)
qplot(date,data=sum_of_steps,weight=step_sum,geom="histogram",fill="blue",bins=61) + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
qplot(date,data=sum_of_steps,weight=step_sum,geom="histogram",fill="blue",bins=nrow(sum_of_steps),show_guide=FALSE) + geom_line(aes(date, mean(sum_of_steps$step_sum)),lwd=1,col="blue") + geom_line(aes(date, median(sum_of_steps$step_sum)),lwd=1,col="green")
hist(sum_of_steps$stepsum,col="blue", xlab="Date",ylab="Total numer of steps taken each day")
hist(sum_of_steps$step_sum,col="blue", xlab="Date",ylab="Total numer of steps taken each day")
hist(sum_of_steps$step_sum,bins=10,col="blue", xlab="Date",ylab="Total numer of steps taken each day")
hist(sum_of_steps$step_sum,bin=10,col="blue", xlab="Date",ylab="Total numer of steps taken each day")
?hist
hist(sum_of_steps$step_sum,breaks=10,col="blue", xlab="Date",ylab="Total numer of steps taken each day")
getwd()
dir()
hist(sum_of_steps$step_sum,col="blue", xlab="Number of steps", ylab="Number of days", main="Number of steps taken each day")
sum_of_steps <- proj %>% group_by(date) %>% summarize(step_sum = sum(steps))
hist(sum_of_steps$step_sum,col="blue", xlab="Number of steps", ylab="Number of days", main="Number of steps taken each day")
rug(sum_of_steps$step_sum,col="blue")
abline(v=median(sum_of_steps$step_sum),lty=1,lwd=2,col="green")
abline(v=median(sum_of_steps$step_sum),lty=1,lwd=5,col="green")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="red")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="red",untf=TRUE)
?abline
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="red")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="black")
a <- mean(sum_of_steps$step_sum)
b <- median(sum_of_steps$step_sum)
abline(v=a,lty=2,lwd=2,col="black")
dev.off()
hist(sum_of_steps$step_sum,col="blue", xlab="Number of steps", ylab="Number of days", main="Number of steps taken each day")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="black")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="red")
abline(v=a,lty=2,lwd=2,col="red")
?abline
hist(sum_of_steps$step_sum,col="blue", xlab="Number of steps", ylab="Number of days", main="Number of steps taken each day")
abline(v=mean(sum_of_steps$step_sum),lty=2,lwd=2,col="red")
a
abline(v=mean(sum_of_steps$step_sum,na.rm=TRUE),lty=2,lwd=2,col="red")
abline(v=median(sum_of_steps$step_sum,na.rm=TRUE),lty=2,lwd=2,col="green")
mean(sum_of_steps$step_sum,na.rm=TRUE)
median(sum_of_steps$step_sum,na.rm=TRUE)
abline(v=mean(sum_of_steps$step_sum,na.rm=TRUE),lty=1,lwd=2,col="red")
abline(v=median(sum_of_steps$step_sum,na.rm=TRUE),lty=2,lwd=2,col="green")
legend("topleft",lwd=2,col=c("green","red"),c("Median","Mean"), cex=1.2,box.lwd=0)
mean(sum_of_steps$step_sum,na.rm=TRUE) %>% round(2)
head(proj)
time_series <- proj %>% group_by(interval,date) %>% summarize(average = mean(steps))
time_series
time_series <- proj %>% group_by(interval,date) %>% summarize(average = mean(steps,na.rm=TRUE))
time_series
time_series <- proj %>% group_by(interval) %>% summarize(average = mean(steps,na.rm=TRUE))
time_series
hist(time_series$average,type="l",col="blue")
with(time_series, plot(interval,average,type="l",col="blue")
)
with(time_series, plot(interval,average))
par(type)
?par(type)
?plot
with(time_series, plot(interval,average,type="l"))
with(time_series, plot(interval,average,type="l",col=blue))
with(time_series, plot(interval,average,type="l",col="blue"))
which.max(time_series)
which.max(time_series[,2])
time_series[which.max(time_series[,2])]
time_series[which.max(time_series[,2]),]
which.max(time_series$average)
time_series[which.max(time_series$average),]
time_series[which.max(time_series$average)]
time_series[which.max(time_series$average),]
max <- which.max(time_series$average)
time_series[max,]
maxie <- time_series[max,]
max_int <- maxie[1]
max_av <- maxie[2]
max_int
install.packages("mice")
library(mice)
tempData <- mice(proj,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
tempData <- mice(proj$steps,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
head(proj)
tempData <- mice(proj$steps,m=1,maxit=50,meth='pmm',seed=500)
summary(tempData)
tempData <- mice(proj$steps,m=5,maxit=50,meth='pmm',seed=500)
tempData <- mice(proj,m=5,maxit=50,meth='pmm',seed=500)
head(proj)
tail(proj,20)
missing_values <- is.na(proj[1,])
head(missing_values)
missing_values <- is.na(proj[,1])
head(missing_values)
sum(missing_values)
sum(is.na(proj$steps))
setwd("../")
source("fibonaci.R")
setwd("ReproducibleResearch/")
?aggregate
